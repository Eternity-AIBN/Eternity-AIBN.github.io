[ { "title": "Pyqt学习", "url": "/posts/PyQt%E5%AD%A6%E4%B9%A0/", "categories": "", "tags": "", "date": "2021-02-09 00:00:00 +0800", "snippet": "参考教程一、第一个例子一个应用的组件是分层结构，其中大多组件都有父类，没有父类的组件是顶级窗口简单例子import sysfrom PyQt5.QtWidgets import QApplication,QWidgetif __name__ == &#39;__main__&#39;: app = QApplication(sys.argv) # 所有PyQt5应用都要创建一个应用对象 w = QWidget() # 所有用户界面类的基础类 w.resize(250,150) w.move(300,300) w.setWindowTitle(&..." }, { "title": "Pytorch学习", "url": "/posts/Pytorch%E5%AD%A6%E4%B9%A0/", "categories": "", "tags": "", "date": "2020-09-20 00:00:00 +0800", "snippet": "一、比基础还基础的基础1. 一些基本操作 构建张量：torch.Tensor(5,3) 零矩阵：torch.zeros(5,3,dtype=torch.long) 在已有张量基础上：x=x.new_ones(5,3) 获取张量大小：x.size() 原地操作：_后缀，如y.add_(x) 调整大小：torch.view 单元素张量可用.item()获取其值 –&amp;gt;更多张量操作 2. 张量与numpy数组的转换 张量→numpy数组：b=a.numpy() ..." }, { "title": "Leetcode随缘刷题", "url": "/posts/Leetcode%E9%9A%8F%E7%BC%98%E5%88%B7%E9%A2%98/", "categories": "", "tags": "", "date": "2020-09-16 00:00:00 +0800", "snippet": "239. 滑动窗口最大值 2020-9-16题目描述给定一个数组 nums，有一个大小为 k 的滑动窗口从数组的最左侧移动到数组的最右侧。你只可以看到在滑动窗口内的 k 个数字。滑动窗口每次只向右移动一位。返回滑动窗口中的最大值。进阶：你能在线时间复杂度内解决此题吗？示例： 输入: nums = [1,3,-1,-3,5,3,6,7], 和 k = 3输出: [3,3,5,5,6,7] 解释: 滑动窗口的位置 最大值————— —–[1 3 -1] -3 5 3 6 7 3 1 [3 -1 -3..." }, { "title": "《动手学深度学习》笔记", "url": "/posts/%E5%8A%A8%E6%89%8B%E5%AD%A6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-%E7%AC%94%E8%AE%B0/", "categories": "", "tags": "", "date": "2020-08-26 00:00:00 +0800", "snippet": "一、MXNet 基础 asscalar函数将向量转换为标量 广播机制 NDArray 与 Numpy 转换： D = nd.array(P) # Numpy-&amp;gt;NDArrayD.asnumpy() # NDArray-&amp;gt;Numpy 自动求梯度： x.attach_grad() # 申请存储梯度所需要的内存with autograd.record(): # 要求MXNet记录与求梯度有关的计算 y = f(x)y.backward() # 自动求梯度 以线..." }, { "title": "Hello World", "url": "/posts/Hello-World/", "categories": "", "tags": "", "date": "2020-08-21 00:00:00 +0800", "snippet": "Hello World！" } ]
